// Code generated by MockGen. DO NOT EDIT.
// Source: domain/company.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"
	time "time"
	domain "xm/domain"

	gomock "github.com/golang/mock/gomock"
)

// MockCompanyCrudInterface is a mock of CompanyCrudInterface interface.
type MockCompanyCrudInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCompanyCrudInterfaceMockRecorder
}

// MockCompanyCrudInterfaceMockRecorder is the mock recorder for MockCompanyCrudInterface.
type MockCompanyCrudInterfaceMockRecorder struct {
	mock *MockCompanyCrudInterface
}

// NewMockCompanyCrudInterface creates a new mock instance.
func NewMockCompanyCrudInterface(ctrl *gomock.Controller) *MockCompanyCrudInterface {
	mock := &MockCompanyCrudInterface{ctrl: ctrl}
	mock.recorder = &MockCompanyCrudInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCompanyCrudInterface) EXPECT() *MockCompanyCrudInterfaceMockRecorder {
	return m.recorder
}

// DelKey mocks base method.
func (m *MockCompanyCrudInterface) DelKey(key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DelKey", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// DelKey indicates an expected call of DelKey.
func (mr *MockCompanyCrudInterfaceMockRecorder) DelKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DelKey", reflect.TypeOf((*MockCompanyCrudInterface)(nil).DelKey), key)
}

// GetAllValues mocks base method.
func (m *MockCompanyCrudInterface) GetAllValues() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllValues")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetAllValues indicates an expected call of GetAllValues.
func (mr *MockCompanyCrudInterfaceMockRecorder) GetAllValues() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllValues", reflect.TypeOf((*MockCompanyCrudInterface)(nil).GetAllValues))
}

// GetKey mocks base method.
func (m *MockCompanyCrudInterface) GetKey(id string) (domain.Company, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", id)
	ret0, _ := ret[0].(domain.Company)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKey indicates an expected call of GetKey.
func (mr *MockCompanyCrudInterfaceMockRecorder) GetKey(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockCompanyCrudInterface)(nil).GetKey), id)
}

// SetKey mocks base method.
func (m *MockCompanyCrudInterface) SetKey(value domain.Company, id string, expiration time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetKey", value, id, expiration)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetKey indicates an expected call of SetKey.
func (mr *MockCompanyCrudInterfaceMockRecorder) SetKey(value, id, expiration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetKey", reflect.TypeOf((*MockCompanyCrudInterface)(nil).SetKey), value, id, expiration)
}
